// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieCard Component renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieCardComponent
    movie={
      Object {
        "title": "Test",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Card
        className="card"
        expandable={false}
        expanded={null}
        initiallyExpanded={false}
      >
        <CardMedia
          className="cardMedia"
          overlay={<CardTitle />}
        >
          <div />
        </CardMedia>
      </Card>,
      "replace": false,
      "to": "/movie/undefined",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <CardMedia
          className="cardMedia"
          overlay={<CardTitle />}
        >
          <div />
        </CardMedia>,
        "className": "card",
        "expandable": false,
        "expanded": null,
        "initiallyExpanded": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div />,
          "className": "cardMedia",
          "overlay": <CardTitle />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Card
          className="card"
          expandable={false}
          expanded={null}
          initiallyExpanded={false}
        >
          <CardMedia
            className="cardMedia"
            overlay={<CardTitle />}
          >
            <div />
          </CardMedia>
        </Card>,
        "replace": false,
        "to": "/movie/undefined",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <CardMedia
            className="cardMedia"
            overlay={<CardTitle />}
          >
            <div />
          </CardMedia>,
          "className": "card",
          "expandable": false,
          "expanded": null,
          "initiallyExpanded": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div />,
            "className": "cardMedia",
            "overlay": <CardTitle />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
